상속
객체의 재사용
단일 상속만 허용
extends 키워드 사용
상위의 클래스를 하위의 클래스가 재사용
상위 클래스 : super class, parent class
하위 클래스 : sub class, child class
하위 클레스 = 상위 클래스 +추가 변수 또는 메소드
상위 보다 하위가 변수의 갯구나 메소드는 증가
개념적으로 상위가 더 generic
개념적으로 하위가 더 special
결국 개념적으로는 상위의 개념이 하위의 개념을 포함
변수나 메소드의 갯수는 하위가 상위보다 많으나 개념적으로는 상위>하위
객체간의 형변환시 개념적으로 접근
객체간의 형변환
	하위클래스 -> 상위클래스(자동 객체 형변환: Up Casting)
	하위클래스 <- 상위클래스(강제 객체 형변환: Down Casting)
하위 클래스의 객체 인스턴스 생성시,
	상위 클래스의 기본 생성자를 자동 호출
상위 클래스는 기본생성자를 생성해 두어야 상속시 문제가 발생하지 않음

상속(재사용)-부품(클래스)를 만들때 기존에 있는 클래스를 재사용
클래스 상속의 단일 상속만 가능 부모클래스를 자식클래스가 상속받음
(수퍼클래스) (서브클래스)
Animal 		Cat,Dog....
범위가 크고 ,범위가 좁혀지면서
추상적		구체적
크기를 결정할 때는 부모클래스가 크다.

오버라이딩-상속받은 메소드를 재정의해서 사용
	   부모클래스에 정의했던 메소드와 리턴타입과 메소드이름과 입력값이
	   동일해야함.

객체를 만들었을 때, 멤버변수가 복사
멤버변수의 값 초기화 : 생성자
멤버변수의 값 출력 : toString()

모든 클래스는 다 Object클래스를 기본으로 상속을 받음

정적변수 - 생성된 객체간 공유할 변수
(static) - 자주 사용하는 변수의 값이 있는 경우
	   객체생성하지 않고 바로
	   클래스 이름으로 사용할 수 있도록 만듦.
정적메소드 - 자주 사용하는 메소드는 객체생성하지 않고
	     바로 클래스 이름으로 사용할 수 있도록 만듦.
	     Integer.parseInt(s);
